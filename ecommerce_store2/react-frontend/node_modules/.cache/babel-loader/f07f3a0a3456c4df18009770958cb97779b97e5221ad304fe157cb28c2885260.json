{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end'\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, \"\".concat(prefixCls, \"-placement-\").concat(placement), {\n    [\"\".concat(prefixCls, \"-rtl\")]: direction === 'rtl',\n    [\"\".concat(prefixCls, \"-color-\").concat(color)]: colorInPreset\n  }, className);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(\"\".concat(prefixCls, \"-wrapper\"), hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-text\")\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-corner\"),\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;","map":{"version":3,"names":["classNames","React","isPresetColor","ConfigContext","useStyle","Ribbon","props","className","prefixCls","customizePrefixCls","style","color","children","text","placement","getPrefixCls","direction","useContext","colorInPreset","ribbonCls","concat","wrapSSR","hashId","colorStyle","cornerColorStyle","background","createElement","Object","assign","process","env","NODE_ENV","displayName"],"sources":["E:/xampp/htdocs/react/whole project/react-frontend/node_modules/antd/es/badge/Ribbon.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { isPresetColor } from '../_util/colors';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nconst Ribbon = props => {\n  const {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end'\n  } = props;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;"],"mappings":"AAAA,OAAOA,UAAU,MAAM,YAAY;AACnC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,aAAa,QAAQ,oBAAoB;AAClD,OAAOC,QAAQ,MAAM,SAAS;AAC9B,MAAMC,MAAM,GAAGC,KAAK,IAAI;EACtB,MAAM;IACJC,SAAS;IACTC,SAAS,EAAEC,kBAAkB;IAC7BC,KAAK;IACLC,KAAK;IACLC,QAAQ;IACRC,IAAI;IACJC,SAAS,GAAG;EACd,CAAC,GAAGR,KAAK;EACT,MAAM;IACJS,YAAY;IACZC;EACF,CAAC,GAAGf,KAAK,CAACgB,UAAU,CAACd,aAAa,CAAC;EACnC,MAAMK,SAAS,GAAGO,YAAY,CAAC,QAAQ,EAAEN,kBAAkB,CAAC;EAC5D,MAAMS,aAAa,GAAGhB,aAAa,CAACS,KAAK,EAAE,KAAK,CAAC;EACjD,MAAMQ,SAAS,GAAGnB,UAAU,CAACQ,SAAS,KAAAY,MAAA,CAAKZ,SAAS,iBAAAY,MAAA,CAAcN,SAAS,GAAI;IAC7E,IAAAM,MAAA,CAAIZ,SAAS,YAASQ,SAAS,KAAK,KAAK;IACzC,IAAAI,MAAA,CAAIZ,SAAS,aAAAY,MAAA,CAAUT,KAAK,IAAKO;EACnC,CAAC,EAAEX,SAAS,CAAC;EACb,MAAM,CAACc,OAAO,EAAEC,MAAM,CAAC,GAAGlB,QAAQ,CAACI,SAAS,CAAC;EAC7C,MAAMe,UAAU,GAAG,CAAC,CAAC;EACrB,MAAMC,gBAAgB,GAAG,CAAC,CAAC;EAC3B,IAAIb,KAAK,IAAI,CAACO,aAAa,EAAE;IAC3BK,UAAU,CAACE,UAAU,GAAGd,KAAK;IAC7Ba,gBAAgB,CAACb,KAAK,GAAGA,KAAK;EAChC;EACA,OAAOU,OAAO,EAAE,aAAapB,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;IACtDnB,SAAS,EAAEP,UAAU,IAAAoB,MAAA,CAAIZ,SAAS,eAAYc,MAAM;EACtD,CAAC,EAAEV,QAAQ,EAAE,aAAaX,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;IACnDnB,SAAS,EAAEP,UAAU,CAACmB,SAAS,EAAEG,MAAM,CAAC;IACxCZ,KAAK,EAAEiB,MAAM,CAACC,MAAM,CAACD,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEL,UAAU,CAAC,EAAEb,KAAK;EAC3D,CAAC,EAAE,aAAaT,KAAK,CAACyB,aAAa,CAAC,MAAM,EAAE;IAC1CnB,SAAS,KAAAa,MAAA,CAAKZ,SAAS;EACzB,CAAC,EAAEK,IAAI,CAAC,EAAE,aAAaZ,KAAK,CAACyB,aAAa,CAAC,KAAK,EAAE;IAChDnB,SAAS,KAAAa,MAAA,CAAKZ,SAAS,YAAS;IAChCE,KAAK,EAAEc;EACT,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC;AACD,IAAIK,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;EACzC1B,MAAM,CAAC2B,WAAW,GAAG,QAAQ;AAC/B;AACA,eAAe3B,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}