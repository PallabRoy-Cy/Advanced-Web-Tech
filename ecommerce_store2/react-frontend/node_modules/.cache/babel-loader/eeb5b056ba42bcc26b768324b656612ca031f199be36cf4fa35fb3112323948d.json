{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = \"\".concat(antCls, \"-scroll-number\");\n  const ribbonPrefixCls = \"\".concat(antCls, \"-ribbon\");\n  const ribbonWrapperPrefixCls = \"\".concat(antCls, \"-ribbon-wrapper\");\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [\"&\".concat(componentCls, \" \").concat(componentCls, \"-color-\").concat(colorKey)]: {\n        background: darkColor,\n        [\"&:not(\".concat(componentCls, \"-count)\")]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [\"&\".concat(ribbonPrefixCls, \"-color-\").concat(colorKey)]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [\"\".concat(componentCls, \"-count\")]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: \"\".concat(token.badgeHeight, \"px\"),\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: \"0 0 0 \".concat(badgeShadowSize, \"px \").concat(token.badgeShadowColor),\n        transition: \"background \".concat(token.motionDurationMid),\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [\"\".concat(componentCls, \"-count-sm\")]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: \"\".concat(badgeHeightSm, \"px\"),\n        borderRadius: badgeHeightSm / 2\n      },\n      [\"\".concat(componentCls, \"-multiple-words\")]: {\n        padding: \"0 \".concat(token.paddingXS, \"px\"),\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [\"\".concat(componentCls, \"-dot\")]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: \"0 0 0 \".concat(badgeShadowSize, \"px \").concat(token.badgeShadowColor)\n      },\n      [\"\".concat(componentCls, \"-dot\").concat(numberPrefixCls)]: {\n        transition: \"background \".concat(motionDurationSlow)\n      },\n      [\"\".concat(componentCls, \"-count, \").concat(componentCls, \"-dot, \").concat(numberPrefixCls, \"-custom-component\")]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [\"&\".concat(iconCls, \"-spin\")]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [\"&\".concat(componentCls, \"-status\")]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [\"\".concat(componentCls, \"-status-dot\")]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [\"\".concat(componentCls, \"-status-success\")]: {\n          backgroundColor: token.colorSuccess\n        },\n        [\"\".concat(componentCls, \"-status-processing\")]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [\"\".concat(componentCls, \"-status-default\")]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [\"\".concat(componentCls, \"-status-error\")]: {\n          backgroundColor: token.colorError\n        },\n        [\"\".concat(componentCls, \"-status-warning\")]: {\n          backgroundColor: token.colorWarning\n        },\n        [\"\".concat(componentCls, \"-status-text\")]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [\"\".concat(componentCls, \"-zoom-appear, \").concat(componentCls, \"-zoom-enter\")]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [\"\".concat(componentCls, \"-zoom-leave\")]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [\"&\".concat(componentCls, \"-not-a-wrapper\")]: {\n        [\"\".concat(componentCls, \"-zoom-appear, \").concat(componentCls, \"-zoom-enter\")]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [\"\".concat(componentCls, \"-zoom-leave\")]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [\"&:not(\".concat(componentCls, \"-status)\")]: {\n          verticalAlign: 'middle'\n        },\n        [\"\".concat(numberPrefixCls, \"-custom-component, \").concat(componentCls, \"-count\")]: {\n          transform: 'none'\n        },\n        [\"\".concat(numberPrefixCls, \"-custom-component, \").concat(numberPrefixCls)]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [\"\".concat(numberPrefixCls)]: {\n        overflow: 'hidden',\n        [\"\".concat(numberPrefixCls, \"-only\")]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: \"all \".concat(token.motionDurationSlow, \" \").concat(token.motionEaseOutBack),\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [\"> p\".concat(numberPrefixCls, \"-only-unit\")]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [\"\".concat(numberPrefixCls, \"-symbol\")]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [\"\".concat(componentCls, \"-count, \").concat(componentCls, \"-dot, \").concat(numberPrefixCls, \"-custom-component\")]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [\"\".concat(ribbonWrapperPrefixCls)]: {\n      position: 'relative'\n    },\n    [\"\".concat(ribbonPrefixCls)]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: \"0 \".concat(token.paddingXS, \"px\"),\n      color: token.colorPrimary,\n      lineHeight: \"\".concat(badgeFontHeight, \"px\"),\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [\"\".concat(ribbonPrefixCls, \"-text\")]: {\n        color: token.colorTextLightSolid\n      },\n      [\"\".concat(ribbonPrefixCls, \"-corner\")]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: \"\".concat(badgeRibbonOffset / 2, \"px solid\"),\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [\"&\".concat(ribbonPrefixCls, \"-placement-end\")]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [\"\".concat(ribbonPrefixCls, \"-corner\")]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [\"&\".concat(ribbonPrefixCls, \"-placement-start\")]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [\"\".concat(ribbonPrefixCls, \"-corner\")]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: \"brightness(75%)\"\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","map":{"version":3,"names":["Keyframes","resetComponent","genComponentStyleHook","genPresetColor","mergeToken","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeFontHeight","badgeShadowSize","badgeHeightSm","motionDurationSlow","badgeStatusSize","marginXS","badgeRibbonOffset","numberPrefixCls","concat","ribbonPrefixCls","ribbonWrapperPrefixCls","colorPreset","colorKey","_ref","darkColor","background","color","statusRibbonPreset","_ref2","Object","assign","position","display","width","lineHeight","zIndex","badgeZIndex","minWidth","badgeHeight","height","badgeTextColor","fontWeight","badgeFontWeight","fontSize","badgeFontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","badgeFontSizeSm","padding","paddingXS","bdi","unicodeBidi","badgeDotSize","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","overflow","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","borderRadiusSM","colorTextLightSolid","border","badgeRibbonCornerTransform","filter","badgeRibbonCornerFilter","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","borderEndStartRadius","borderInlineStartColor","fontSizeSM","lineWidth","colorBorderBg","Math","round","colorBgContainer","colorErrorHover","badgeToken"],"sources":["E:/xampp/htdocs/react/whole project/react-frontend/node_modules/antd/es/badge/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genComponentStyleHook, genPresetColor, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        }\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}