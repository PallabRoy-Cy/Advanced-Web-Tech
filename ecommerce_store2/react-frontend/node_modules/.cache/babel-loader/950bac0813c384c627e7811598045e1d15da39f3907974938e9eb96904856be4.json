{"ast":null,"code":"import { Keyframes } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [\".\".concat(prefixCls, \"-switcher-icon\")]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: \"transform \".concat(token.motionDurationSlow)\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [\".\".concat(prefixCls, \"-drop-indicator\")]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: \"\".concat(token.lineWidthBold, \"px solid \").concat(token.colorPrimary),\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: \"background-color \".concat(token.motionDurationSlow),\n      [\"&\".concat(treeCls, \"-rtl\")]: {\n        // >>> Switcher\n        [\"\".concat(treeCls, \"-switcher\")]: {\n          '&_close': {\n            [\"\".concat(treeCls, \"-switcher-icon\")]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [\"&-focused:not(:hover):not(\".concat(treeCls, \"-active-focused)\")]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [\"\".concat(treeCls, \"-list-holder-inner\")]: {\n        alignItems: 'flex-start'\n      },\n      [\"&\".concat(treeCls, \"-block-node\")]: {\n        [\"\".concat(treeCls, \"-list-holder-inner\")]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [\"\".concat(treeNodeCls, \".dragging\")]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: \"1px solid \".concat(token.colorPrimary),\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [\"\".concat(treeNodeCls)]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: \"0 0 \".concat(treeNodePadding, \"px 0\"),\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [\"&-active \".concat(treeCls, \"-node-content-wrapper\")]: Object.assign({}, genFocusOutline(token)),\n        [\"&:not(\".concat(treeNodeCls, \"-disabled).filter-node \").concat(treeCls, \"-title\")]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [\"\".concat(treeCls, \"-draggable-icon\")]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: treeTitleHeight,\n            lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: \"opacity \".concat(token.motionDurationSlow),\n            [\"\".concat(treeNodeCls, \":hover &\")]: {\n              opacity: 0.45\n            }\n          },\n          [\"&\".concat(treeNodeCls, \"-disabled\")]: {\n            [\"\".concat(treeCls, \"-draggable-icon\")]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [\"\".concat(treeCls, \"-indent\")]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [\"\".concat(treeCls, \"-draggable-icon\")]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [\"\".concat(treeCls, \"-switcher\")]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [\"\".concat(treeCls, \"-switcher-icon\")]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: \"1px solid \".concat(token.colorBorder),\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [\"\".concat(treeCls, \"-checkbox\")]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [\"\".concat(treeCls, \"-node-content-wrapper, \").concat(treeCls, \"-checkbox + span\")]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: \"0 \".concat(token.paddingXS / 2, \"px\"),\n        color: 'inherit',\n        lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: \"all \".concat(token.motionDurationMid, \", border 0s, line-height 0s, box-shadow 0s\"),\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [\"&\".concat(treeCls, \"-node-selected\")]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [\"\".concat(treeCls, \"-iconEle\")]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [\"\".concat(treeCls, \"-unselectable \").concat(treeCls, \"-node-content-wrapper:hover\")]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [\"\".concat(treeCls, \"-node-content-wrapper\")]: Object.assign({\n        lineHeight: \"\".concat(treeTitleHeight, \"px\"),\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [\"\".concat(treeNodeCls, \".drop-container\")]: {\n        '> [draggable]': {\n          boxShadow: \"0 0 0 2px \".concat(token.colorPrimary)\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [\"\".concat(treeCls, \"-indent\")]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: \"1px solid \".concat(token.colorBorder),\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [\"\".concat(treeCls, \"-switcher\")]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [\"\".concat(treeNodeCls, \"-leaf-last\")]: {\n        [\"\".concat(treeCls, \"-switcher\")]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: \"\".concat(treeTitleHeight / 2, \"px !important\")\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [\"\".concat(treeCls).concat(treeCls, \"-directory\")]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: \"background-color \".concat(token.motionDurationMid),\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [\"\".concat(treeCls, \"-switcher\")]: {\n          transition: \"color \".concat(token.motionDurationMid)\n        },\n        // >>> Title\n        [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [\"&\".concat(treeCls, \"-node-selected\")]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [\"\\n            &:hover::before,\\n            &::before\\n          \"]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [\"\".concat(treeCls, \"-switcher\")]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [\"\".concat(treeCls, \"-node-content-wrapper\")]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = \".\".concat(prefixCls);\n  const treeNodeCls = \"\".concat(treeCls, \"-treenode\");\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(\"\".concat(prefixCls, \"-checkbox\"), token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});","map":{"version":3,"names":["Keyframes","getStyle","getCheckboxStyle","genFocusOutline","resetComponent","genCollapseMotion","genComponentStyleHook","mergeToken","treeNodeFX","opacity","getSwitchStyle","prefixCls","token","concat","display","fontSize","verticalAlign","svg","transition","motionDurationSlow","getDropIndicatorStyle","position","zIndex","height","backgroundColor","colorPrimary","borderRadius","pointerEvents","top","insetInlineStart","width","border","lineWidthBold","content","genBaseStyle","treeCls","treeNodeCls","treeNodePadding","treeTitleHeight","treeCheckBoxMarginHorizontal","paddingXS","Object","assign","background","colorBgContainer","transform","alignItems","flex","insetInlineEnd","bottom","animationName","animationDuration","animationPlayState","animationFillMode","padding","outline","direction","color","colorTextDisabled","cursor","fontWeight","flexShrink","lineHeight","textAlign","visibility","alignSelf","whiteSpace","userSelect","margin","marginInlineStart","borderInlineEnd","colorBorder","borderBottom","marginInlineEnd","minHeight","motionDurationMid","controlItemBgHover","controlItemBgActive","boxShadow","genDirectoryStyle","colorTextLightSolid","genTreeStyle","controlHeightSM","treeToken","_ref","componentCls"],"sources":["E:/xampp/htdocs/react/whole project/react-frontend/node_modules/antd/es/tree/style/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { getStyle as getCheckboxStyle } from '../../checkbox/style';\nimport { genFocusOutline, resetComponent } from '../../style';\nimport { genCollapseMotion } from '../../style/motion';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================ Keyframes =============================\nconst treeNodeFX = new Keyframes('ant-tree-node-fx-do-not-use', {\n  '0%': {\n    opacity: 0\n  },\n  '100%': {\n    opacity: 1\n  }\n});\n// ============================== Switch ==============================\nconst getSwitchStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-switcher-icon`]: {\n    display: 'inline-block',\n    fontSize: 10,\n    verticalAlign: 'baseline',\n    svg: {\n      transition: `transform ${token.motionDurationSlow}`\n    }\n  }\n});\n// =============================== Drop ===============================\nconst getDropIndicatorStyle = (prefixCls, token) => ({\n  [`.${prefixCls}-drop-indicator`]: {\n    position: 'absolute',\n    // it should displayed over the following node\n    zIndex: 1,\n    height: 2,\n    backgroundColor: token.colorPrimary,\n    borderRadius: 1,\n    pointerEvents: 'none',\n    '&:after': {\n      position: 'absolute',\n      top: -3,\n      insetInlineStart: -6,\n      width: 8,\n      height: 8,\n      backgroundColor: 'transparent',\n      border: `${token.lineWidthBold}px solid ${token.colorPrimary}`,\n      borderRadius: '50%',\n      content: '\"\"'\n    }\n  }\n});\nexport const genBaseStyle = (prefixCls, token) => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  } = token;\n  const treeCheckBoxMarginHorizontal = token.paddingXS;\n  return {\n    [treeCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      background: token.colorBgContainer,\n      borderRadius: token.borderRadius,\n      transition: `background-color ${token.motionDurationSlow}`,\n      [`&${treeCls}-rtl`]: {\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          '&_close': {\n            [`${treeCls}-switcher-icon`]: {\n              svg: {\n                transform: 'rotate(90deg)'\n              }\n            }\n          }\n        }\n      },\n      [`&-focused:not(:hover):not(${treeCls}-active-focused)`]: Object.assign({}, genFocusOutline(token)),\n      // =================== Virtual List ===================\n      [`${treeCls}-list-holder-inner`]: {\n        alignItems: 'flex-start'\n      },\n      [`&${treeCls}-block-node`]: {\n        [`${treeCls}-list-holder-inner`]: {\n          alignItems: 'stretch',\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            flex: 'auto'\n          },\n          // >>> Drag\n          [`${treeNodeCls}.dragging`]: {\n            position: 'relative',\n            '&:after': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: 0,\n              bottom: treeNodePadding,\n              insetInlineStart: 0,\n              border: `1px solid ${token.colorPrimary}`,\n              opacity: 0,\n              animationName: treeNodeFX,\n              animationDuration: token.motionDurationSlow,\n              animationPlayState: 'running',\n              animationFillMode: 'forwards',\n              content: '\"\"',\n              pointerEvents: 'none'\n            }\n          }\n        }\n      },\n      // ===================== TreeNode =====================\n      [`${treeNodeCls}`]: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `0 0 ${treeNodePadding}px 0`,\n        outline: 'none',\n        '&-rtl': {\n          direction: 'rtl'\n        },\n        // Disabled\n        '&-disabled': {\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextDisabled,\n            cursor: 'not-allowed',\n            '&:hover': {\n              background: 'transparent'\n            }\n          }\n        },\n        [`&-active ${treeCls}-node-content-wrapper`]: Object.assign({}, genFocusOutline(token)),\n        [`&:not(${treeNodeCls}-disabled).filter-node ${treeCls}-title`]: {\n          color: 'inherit',\n          fontWeight: 500\n        },\n        '&-draggable': {\n          [`${treeCls}-draggable-icon`]: {\n            // https://github.com/ant-design/ant-design/issues/41915\n            flexShrink: 0,\n            width: treeTitleHeight,\n            lineHeight: `${treeTitleHeight}px`,\n            textAlign: 'center',\n            visibility: 'visible',\n            opacity: 0.2,\n            transition: `opacity ${token.motionDurationSlow}`,\n            [`${treeNodeCls}:hover &`]: {\n              opacity: 0.45\n            }\n          },\n          [`&${treeNodeCls}-disabled`]: {\n            [`${treeCls}-draggable-icon`]: {\n              visibility: 'hidden'\n            }\n          }\n        }\n      },\n      // >>> Indent\n      [`${treeCls}-indent`]: {\n        alignSelf: 'stretch',\n        whiteSpace: 'nowrap',\n        userSelect: 'none',\n        '&-unit': {\n          display: 'inline-block',\n          width: treeTitleHeight\n        }\n      },\n      // >>> Drag Handler\n      [`${treeCls}-draggable-icon`]: {\n        visibility: 'hidden'\n      },\n      // >>> Switcher\n      [`${treeCls}-switcher`]: Object.assign(Object.assign({}, getSwitchStyle(prefixCls, token)), {\n        position: 'relative',\n        flex: 'none',\n        alignSelf: 'stretch',\n        width: treeTitleHeight,\n        margin: 0,\n        lineHeight: `${treeTitleHeight}px`,\n        textAlign: 'center',\n        cursor: 'pointer',\n        userSelect: 'none',\n        '&-noop': {\n          cursor: 'default'\n        },\n        '&_close': {\n          [`${treeCls}-switcher-icon`]: {\n            svg: {\n              transform: 'rotate(-90deg)'\n            }\n          }\n        },\n        '&-loading-icon': {\n          color: token.colorPrimary\n        },\n        '&-leaf-line': {\n          position: 'relative',\n          zIndex: 1,\n          display: 'inline-block',\n          width: '100%',\n          height: '100%',\n          // https://github.com/ant-design/ant-design/issues/31884\n          '&:before': {\n            position: 'absolute',\n            top: 0,\n            insetInlineEnd: treeTitleHeight / 2,\n            bottom: -treeNodePadding,\n            marginInlineStart: -1,\n            borderInlineEnd: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          },\n          '&:after': {\n            position: 'absolute',\n            width: treeTitleHeight / 2 * 0.8,\n            height: treeTitleHeight / 2,\n            borderBottom: `1px solid ${token.colorBorder}`,\n            content: '\"\"'\n          }\n        }\n      }),\n      // >>> Checkbox\n      [`${treeCls}-checkbox`]: {\n        top: 'initial',\n        marginInlineEnd: treeCheckBoxMarginHorizontal\n      },\n      // >>> Title\n      // add `${treeCls}-checkbox + span` to cover checkbox `${checkboxCls} + span`\n      [`${treeCls}-node-content-wrapper, ${treeCls}-checkbox + span`]: {\n        position: 'relative',\n        zIndex: 'auto',\n        minHeight: treeTitleHeight,\n        margin: 0,\n        padding: `0 ${token.paddingXS / 2}px`,\n        color: 'inherit',\n        lineHeight: `${treeTitleHeight}px`,\n        background: 'transparent',\n        borderRadius: token.borderRadius,\n        cursor: 'pointer',\n        transition: `all ${token.motionDurationMid}, border 0s, line-height 0s, box-shadow 0s`,\n        '&:hover': {\n          backgroundColor: token.controlItemBgHover\n        },\n        [`&${treeCls}-node-selected`]: {\n          backgroundColor: token.controlItemBgActive\n        },\n        // Icon\n        [`${treeCls}-iconEle`]: {\n          display: 'inline-block',\n          width: treeTitleHeight,\n          height: treeTitleHeight,\n          lineHeight: `${treeTitleHeight}px`,\n          textAlign: 'center',\n          verticalAlign: 'top',\n          '&:empty': {\n            display: 'none'\n          }\n        }\n      },\n      // https://github.com/ant-design/ant-design/issues/28217\n      [`${treeCls}-unselectable ${treeCls}-node-content-wrapper:hover`]: {\n        backgroundColor: 'transparent'\n      },\n      // ==================== Draggable =====================\n      [`${treeCls}-node-content-wrapper`]: Object.assign({\n        lineHeight: `${treeTitleHeight}px`,\n        userSelect: 'none'\n      }, getDropIndicatorStyle(prefixCls, token)),\n      [`${treeNodeCls}.drop-container`]: {\n        '> [draggable]': {\n          boxShadow: `0 0 0 2px ${token.colorPrimary}`\n        }\n      },\n      // ==================== Show Line =====================\n      '&-show-line': {\n        // ================ Indent lines ================\n        [`${treeCls}-indent`]: {\n          '&-unit': {\n            position: 'relative',\n            height: '100%',\n            '&:before': {\n              position: 'absolute',\n              top: 0,\n              insetInlineEnd: treeTitleHeight / 2,\n              bottom: -treeNodePadding,\n              borderInlineEnd: `1px solid ${token.colorBorder}`,\n              content: '\"\"'\n            },\n            '&-end': {\n              '&:before': {\n                display: 'none'\n              }\n            }\n          }\n        },\n        // ============== Cover Background ==============\n        [`${treeCls}-switcher`]: {\n          background: 'transparent',\n          '&-line-icon': {\n            // https://github.com/ant-design/ant-design/issues/32813\n            verticalAlign: '-0.15em'\n          }\n        }\n      },\n      [`${treeNodeCls}-leaf-last`]: {\n        [`${treeCls}-switcher`]: {\n          '&-leaf-line': {\n            '&:before': {\n              top: 'auto !important',\n              bottom: 'auto !important',\n              height: `${treeTitleHeight / 2}px !important`\n            }\n          }\n        }\n      }\n    })\n  };\n};\n// ============================ Directory =============================\nexport const genDirectoryStyle = token => {\n  const {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding\n  } = token;\n  return {\n    [`${treeCls}${treeCls}-directory`]: {\n      // ================== TreeNode ==================\n      [treeNodeCls]: {\n        position: 'relative',\n        // Hover color\n        '&:before': {\n          position: 'absolute',\n          top: 0,\n          insetInlineEnd: 0,\n          bottom: treeNodePadding,\n          insetInlineStart: 0,\n          transition: `background-color ${token.motionDurationMid}`,\n          content: '\"\"',\n          pointerEvents: 'none'\n        },\n        '&:hover': {\n          '&:before': {\n            background: token.controlItemBgHover\n          }\n        },\n        // Elements\n        '> *': {\n          zIndex: 1\n        },\n        // >>> Switcher\n        [`${treeCls}-switcher`]: {\n          transition: `color ${token.motionDurationMid}`\n        },\n        // >>> Title\n        [`${treeCls}-node-content-wrapper`]: {\n          borderRadius: 0,\n          userSelect: 'none',\n          '&:hover': {\n            background: 'transparent'\n          },\n          [`&${treeCls}-node-selected`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        },\n        // ============= Selected =============\n        '&-selected': {\n          [`\n            &:hover::before,\n            &::before\n          `]: {\n            background: token.colorPrimary\n          },\n          // >>> Switcher\n          [`${treeCls}-switcher`]: {\n            color: token.colorTextLightSolid\n          },\n          // >>> Title\n          [`${treeCls}-node-content-wrapper`]: {\n            color: token.colorTextLightSolid,\n            background: 'transparent'\n          }\n        }\n      }\n    }\n  };\n};\n// ============================== Merged ==============================\nexport const genTreeStyle = (prefixCls, token) => {\n  const treeCls = `.${prefixCls}`;\n  const treeNodeCls = `${treeCls}-treenode`;\n  const treeNodePadding = token.paddingXS / 2;\n  const treeTitleHeight = token.controlHeightSM;\n  const treeToken = mergeToken(token, {\n    treeCls,\n    treeNodeCls,\n    treeNodePadding,\n    treeTitleHeight\n  });\n  return [\n  // Basic\n  genBaseStyle(prefixCls, treeToken),\n  // Directory\n  genDirectoryStyle(treeToken)];\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Tree', (token, _ref) => {\n  let {\n    prefixCls\n  } = _ref;\n  return [{\n    [token.componentCls]: getCheckboxStyle(`${prefixCls}-checkbox`, token)\n  }, genTreeStyle(prefixCls, token), genCollapseMotion(token)];\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}